[
    {
        "UpdateStageName": "Forge Installer Download",
        "UpdateSourcePlatform": "All",
        "UpdateSource": "FetchURL",
        "UpdateSourceData": "{{ForgeInstallerURL}}",
        "UpdateSourceTarget": "{{$FullBaseDir}}",
        "UpdateSourceArgs": "forge-installer.jar",
        "OverwriteExistingFiles": true,
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "Java Download",
        "UpdateSourcePlatform": "Linux",
        "UpdateSourceArch": "x86_64",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"cd minecraft-forge && if [[ -x java/bin/java ]]; then echo \\\"Eclipse Temurin Java already present. Skipping\\\" && exit 0; else [[ -f java.tar.gz ]] && rm -f java.tar.gz >/dev/null 2>&1; if command -v wget >/dev/null 2>&1; then wget -qO java.tar.gz https://api.adoptium.net/v3/binary/latest/{{SpecificInstanceJavaVersion}}/ga/linux/x64/jdk/hotspot/normal/eclipse; elif command -v curl >/dev/null 2>&1; then curl -fsSL https://api.adoptium.net/v3/binary/latest/{{SpecificInstanceJavaVersion}}/ga/linux/x64/jdk/hotspot/normal/eclipse -o java.tar.gz; else echo \\\"Neither wget nor curl found. Aborting\\\"; exit 1; fi; mkdir -p java && rm -rf java/* >/dev/null 2>&1 && tar -xzf java.tar.gz -C java --strip-components=1 >/dev/null 2>&1 && rm -f java.tar.gz >/dev/null 2>&1 && chmod +x java/bin/java && echo \\\"Eclipse Temurin Java downloaded\\\"; fi\"",
        "UpdateSourceConditionSetting": "JavaVersionLinux",
        "UpdateSourceConditionValue": "java/bin/java",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "Java Download",
        "UpdateSourcePlatform": "Linux",
        "UpdateSourceArch": "aarch64",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"cd minecraft-forge && if [[ -x java/bin/java ]]; then echo \\\"Eclipse Temurin Java already present. Skipping\\\" && exit 0; else [[ -f java.tar.gz ]] && rm -f java.tar.gz >/dev/null 2>&1; if command -v wget >/dev/null 2>&1; then wget -qO java.tar.gz https://api.adoptium.net/v3/binary/latest/{{SpecificInstanceJavaVersion}}/ga/linux/aarch64/jdk/hotspot/normal/eclipse; elif command -v curl >/dev/null 2>&1; then curl -fsSL https://api.adoptium.net/v3/binary/latest/{{SpecificInstanceJavaVersion}}/ga/linux/aarch64/jdk/hotspot/normal/eclipse -o java.tar.gz; else echo \\\"Neither wget nor curl found. Aborting\\\"; exit 1; fi; mkdir -p java && rm -rf java/* >/dev/null 2>&1 && tar -xzf java.tar.gz -C java --strip-components=1 >/dev/null 2>&1 && rm -f java.tar.gz >/dev/null 2>&1 && chmod +x java/bin/java && echo \\\"Eclipse Temurin Java downloaded\\\"; fi\"",
        "UpdateSourceConditionSetting": "JavaVersionLinux",
        "UpdateSourceConditionValue": "java/bin/java",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "Java Download",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "Executable",
        "UpdateSourceData": "powershell.exe",
        "UpdateSourceArgs": "-NoProfile -Command \"$ProgressPreference='SilentlyContinue'; [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; Set-Location -Path 'minecraft-forge'; if (Test-Path 'java/bin/java.exe') { $InstalledVersion = (& java/bin/java.exe --version | Select-String -Pattern 'Temurin-(\\\\d+(?:\\\\.\\\\d+\\\\.\\\\d+(?:\\\\.\\\\d+)?)?\\\\+\\\\d+)' | Select-Object -First 1 | ForEach-Object { $_.Matches[0].Groups[1].Value }) } else { $InstalledVersion = '' }; $LatestVersionBuild = (Invoke-RestMethod -UseBasicParsing -Uri \"https://api.adoptium.net/v3/assets/latest/{{SpecificInstanceJavaVersion}}/hotspot?architecture=x64&image_type=jdk&os=windows&vendor=eclipse\")[0].version.openjdk_version -replace '-LTS$', ''; if ( $InstalledVersion -eq $LatestVersionBuild ) { Write-Output \"Eclipse Temurin Java $LatestVersionBuild already installed. Skipping\"; exit 0 } else { if ( Test-Path java.zip ) { Remove-Item java.zip -Force -ErrorAction SilentlyContinue *> $null }; try { Invoke-WebRequest -UseBasicParsing -Uri https://api.adoptium.net/v3/binary/latest/{{SpecificInstanceJavaVersion}}/ga/windows/x64/jdk/hotspot/normal/eclipse -OutFile java.zip -ErrorAction Stop } catch { Write-Output \"Download failed from the Eclipse Temurin CDN. This is a fault with the CDN, not AMP. Aborting\"; exit 1; }; Expand-Archive -Path \"java.zip\" -DestinationPath \".\" -Force *> $null; if ( Test-Path java.zip ) { Remove-Item java.zip -Force -ErrorAction SilentlyContinue *> $null }; if (Test-Path \"jdk-*\") { Remove-Item -Recurse -Force java -ErrorAction SilentlyContinue *> $null; Start-Sleep -Seconds 2; Get-ChildItem -Directory | Where-Object { $_.Name -like \"jdk-*\" } | Rename-Item -NewName \"java\" *> $null; Write-Output \"Eclipse Temurin Java $LatestVersionBuild downloaded\" } }\"",
        "UpdateSourceConditionSetting": "JavaVersionWindows",
        "UpdateSourceConditionValue": "java\\bin\\java.exe",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "Forge Install (Linux)",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"cd minecraft-forge && if [[ -x java/bin/java ]]; then JAVA_CMD=java/bin/java; else JAVA_CMD={{JavaVersionLinux}}; fi; $JAVA_CMD -jar forge-installer.jar --installServer\"",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "Forge Install (Windows)",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "Executable",
        "UpdateSourceData": "powershell.exe",
        "UpdateSourceArgs": "-NoProfile -Command \"Set-Location -Path 'minecraft-forge'; & {{JavaVersionWindows}} -jar forge-installer.jar --installServer\"",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "Post Install (Linux)",
        "UpdateSourcePlatform": "Linux",
        "UpdateSource": "Executable",
        "UpdateSourceData": "/bin/bash",
        "UpdateSourceArgs": "-c \"cd minecraft-forge && echo eula={{EULA}} > eula.txt && JAR=$(ls -1 forge-*.jar | grep -v installer | head -n1); if [[ -n \"$JAR\" ]]; then mv -f \"$JAR\" forge-server.jar; fi; mkdir -p mods\"",
        "SkipOnFailure": false
    },
    {
        "UpdateStageName": "Post Install (Windows)",
        "UpdateSourcePlatform": "Windows",
        "UpdateSource": "Executable",
        "UpdateSourceData": "powershell.exe",
        "UpdateSourceArgs": "-NoProfile -Command \"Set-Location -Path 'minecraft-forge'; Set-Content -Path 'eula.txt' -Value ('eula={{EULA}}'); $jar = Get-ChildItem -Filter 'forge-*.jar' | Where-Object { $_.Name -notlike '*installer*' } | Select-Object -First 1; if ($jar) { Rename-Item -Path $jar.FullName -NewName 'forge-server.jar' -Force }; if (-Not (Test-Path 'mods')) { New-Item -ItemType Directory -Path 'mods' *> $null }\"",
        "SkipOnFailure": false
    }
]